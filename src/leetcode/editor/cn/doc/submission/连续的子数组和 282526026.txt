class Solution {
    public boolean checkSubarraySum(int[] nums, int k) {
        int n = nums.length;
		if (n < 2)
			return false;
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		int sum = 0;
		map.put(0, -1);
		for (int i = 0; i < n; i++) {
			sum = (sum + nums[i]) % k;
			if (map.containsKey(sum)) {
				int pre = map.get(sum);
				if (i - pre >= 2) {
					return true;
				}
			} else {
				map.put(sum, i);
			}
		}
		return false;
    }
}
//runtime:15 ms
//memory:56.3 MB
