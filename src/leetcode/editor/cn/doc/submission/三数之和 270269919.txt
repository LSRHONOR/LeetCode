class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> list = new ArrayList<List<Integer>>();
		if (nums.length < 3)
			return list;
		Arrays.sort(nums);
		for (int i = 0; i <= nums.length - 3; i++) {
			int left = i + 1, right = nums.length - 1;
			while (left < right) {
				int sum = nums[i] + nums[left] + nums[right];
				if (sum == 0) {
					List<Integer> arrayList = new ArrayList<Integer>();
					arrayList.add(nums[i]);
					arrayList.add(nums[left]);
					arrayList.add(nums[right]);
					if (!list.contains(arrayList))
						list.add(arrayList);
				}
				if (sum > 0) {
					right--;
				} else {
					left++;
				}
			}
		}
		return list;
	}
}
//runtime:2030 ms
//memory:45.6 MB
